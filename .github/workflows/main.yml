name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
    
    - name: Extract ngrok
      run: Expand-Archive ngrok.zip
    
    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    
    - name: Enable RDP
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
    
    - name: Configure Firewall to allow RDP
      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    
    - name: Configure RDP User Authentication
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
    
    - name: Set runneradmin password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    
    - name: Create RDP tunnel
      run: .\ngrok\ngrok.exe tcp 3389 > ngrok_output.log

    - name: Get Ngrok URL
      run: |
        $url = (Select-String -Path ngrok_output.log -Pattern "tcp://.*").Matches[0].Value
        Write-Output "Ngrok URL: $url"
        echo $url > ngrok_url.txt

    - name: Upload Ngrok URL
      uses: actions/upload-artifact@v2
      with:
        name: ngrok-url
        path: ngrok_url.txt
